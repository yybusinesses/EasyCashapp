generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id               String    @id @default(cuid())
  email            String    @unique
  name             String?
  password         String
  role             String    @default("freelancer")
  skills           String[]
  rating           Float     @default(0)
  completedProjects Int      @default(0)
  verified         Boolean   @default(false)
  createdAt        DateTime  @default(now())
  updatedAt        DateTime  @updatedAt
  sentMessages     Message[] @relation("SentMessages")
  receivedMessages Message[] @relation("ReceivedMessages")
  jobApplications  JobApplication[]
  savedJobs        SavedJob[]
  preferredLanguage String @default("en")
}

model Project {
  id          String   @id @default(cuid())
  title       String
  description String
  budgetMin   Float
  budgetMax   Float
  currency    String   @default("USD")
  
  // Add location fields
  locationType String  @default("REMOTE") // REMOTE, ON_SITE, HYBRID
  latitude     Float?
  longitude    Float?
  address      String?
  radius       Float?  // in kilometers
  country      String?
  city         String?
  
  skills      String[]
  deadline    DateTime
  status      String   @default("draft")
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  applications JobApplication[]
  savedBy     SavedJob[]
}

model Message {
  id        String   @id @default(cuid())
  content   String
  senderId  String
  sender    User     @relation("SentMessages", fields: [senderId], references: [id])
  receiverId String
  receiver  User     @relation("ReceivedMessages", fields: [receiverId], references: [id])
  read      Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([senderId])
  @@index([receiverId])
}

model JobApplication {
  id          String   @id @default(cuid())
  userId      String
  user        User     @relation(fields: [userId], references: [id])
  projectId   String
  project     Project  @relation(fields: [projectId], references: [id])
  status      String   @default("APPLIED") // APPLIED, ACCEPTED, REJECTED, WITHDRAWN
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@index([userId])
  @@index([projectId])
}

model SavedJob {
  id          String   @id @default(cuid())
  userId      String
  user        User     @relation(fields: [userId], references: [id])
  projectId   String
  project     Project  @relation(fields: [projectId], references: [id])
  createdAt   DateTime @default(now())

  @@index([userId])
  @@index([projectId])
} 